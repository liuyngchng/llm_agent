# config.yaml，文件格式必须严格遵循 yaml配置文件格式
db:
    #  数据库类型, mysql sqlite oracle，最好使用MySQL
    type: mysql
    #  数据库（实例）名称，如果是sqlite，直接写文件名称，本地需存在相应的文件名
    name: your_db_name
    #  数据库连接的IP地址或者域名
    host: your_db_host_IP_or_domain
    #  数据库连接的端口
    port: your_db_instance_port
    #  连接数据库的用户名
    user: your_db_user_name
    #  读取数据库的用户密码
    password: 12345

    # 限制使用的表的数量，最佳实践是1表， 随着表的数量的增加，大模型输出的SQL质量会有一定程度的下降
    restrict_table_number: 1
    strict_search: false
    # 用于数据库部分内容的加解密
    cypher_key: your_cypher_key

sys:
    #  系统名称(title) 配置
    name: 巴拉巴拉小魔仙
    #  是否启用认证， true， 登录后才能使用系统;false 无需登录
    auth: true
    #  自定义数据库配置时的权限认证 token
    cfg_tkn: foobar
    # 配置可访问的域， 防止跨域攻击
    allowed_origin: http://192,168.1.122
    # 对配置信息进行加密的密钥，长度必须为16/32
    cypher_key: abaababa
api:
    # 大语言模型 API 基地址
    llm_api_uri: https://api.deepseek.com/v1
    #  大语言模型 API key
    llm_api_key: 45678
    #  大语言模型 模型名称
    llm_model_name: deepseek-chat

    # 语音识别 API 基地址，需要部署为兼容 OpenAI-API-Compatible
    asr_api_uri: https://api.your_audio_service_provider.com/v1/
    # 语音识别 API key
    asr_api_key: sk-xxxx
    # 语音识别 API 模型名称
    asr_model_name: asr
    # embedding model name
    embedding_model_name: bce-base
#  与大模型相关的提示词配置
prompts:
    #   是否需要在读取数据库数据的基础上，添加chartjs 绘图数据，true 需要; false，不需要，直接输出数据
    add_chart_to_dt: false
    #   用户问题精炼提示词
    refine_q_msg: |
        你是一个专业的 {sql_dialect} 数据库的 SQL生成助手。已知数据库结构：
        {schema}
      
        请检查用户提出的问题，若问题中没有明确查看数据明细的需求，
        且又没有具体的查询条件，则按以下要求优化用户的提问:
        (1) 明确指定为在较大时间、空间内的单一维度汇总数据查询问题;
        (2) 直接输出优化后的简洁问题文本。

    #   通过自然语言生成SQL语句的大模型提示词，内嵌变量 {schema} 不可更改，其他可自定义，多行
    sql_gen_msg: |
        你是一个专业的SQL生成助手。已知数据库各个表的表结构：
        {schema}

        请严格按以下要求生成SQL：
        (1) 仅输出标准SQL代码块，不要任何解释
        (2) 使用与表结构完全一致的中文字段名，不要使用英文字段名
        (3) WHERE条件需限制最多返回20条数据
        (4) 禁止包含分析过程或思考步骤
        (5) 查询语句中禁止用 *表示全部字段， 需列出详细的字段名称清单
        (6) 禁止生成 update、delete 等任何对数据修改的语句

    sql_review_msg: |
        你是一个专业的 {sql_dialect} 数据库的 SQL专家。数据库表结构及样例数据如下所示：
        {schema}

        当前的 SQL 查询语句如下：
        {current_sql}

        请仔细核对已知的数据库schema， 纠正当前 SQL 中存在的错误，，按以下要求重新生成正确的数据查询 SQL：
        (1) 尽量保持原始SQL的含义
        (2) 如果使用了对应表中不存在的字段名称等， 则需要纠正

    #  通过SQL语句查询到数据后，让大语言模型对数据进行文字描述总结的提示词，
    #  内嵌变量 {markdown_dt} 不可更改必须包含,其他可自定义，多行，add_desc_to_dt = true时生效
    chart_dt_gen_msg: |
        你是一个专业的数据解读助手。已知 Markdown格式的数据清单：
        {markdown_dt}

        (1) 请将数据转换为chart.js 可以渲染的数据格式

   # 对用户提出的问题进行优化，以便于能够更加精确地获取相应的数据
    intercept_q_msg: |
      根据已知的数据库表结构信息:
      {schema}
      检查用户提出的问题是否含有相应的查询条件

   # 将查询数据 SQL 转换为 查询数据总条数的 SQL
    count_sql_gen_msg: |
      你是一个专业的 {sql_dialect} 数据库的 SQL生成助手。数据库表结构及样例数据如下所示：
      {schema}
  
      根据查询数据的 SQL, 生成一个符合当前查询条件的所有数据数量的 SQL

    vdb_chat_msg: |
        你是一个专业的xxxx助手，请根据以下上下文信息回答问题：
        {context}

        问题：{question}